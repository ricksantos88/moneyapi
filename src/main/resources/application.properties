# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
# =========================
# = POSTGRESQL CONNECTION =
# =========================
#spring.jpa.database=POSTGRESQL
#spring.datasource.platform=postgres
#spring.datasource.url=jdbc:postgresql://localhost:5432/moneyapi?createDatabaseIfNotExist=true&useSSL=false
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)

# ====================
# = MySQL CONNECTION =
# ====================
spring.jpa.database=MYSQL
spring.datasource.url=jdbc:mysql://localhost:3306/moneyapi?createDatabaseIfNotExist=true&useSSL=false
spring.datasource.username=root
#spring.datasource.password=
spring.jackson.deserialization.fail-on-unknown-properties=true
## Jackson date format
spring.jackson.date-format=yyyy-MM-dd

# ================
# = cross origem =
# ================
origem-permitida=http://localhost:4200
#
#
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
# spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
# spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

